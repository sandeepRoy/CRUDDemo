{"ast":null,"code":"import _defineProperty from \"/home/sandeep/Downloads/react-hooks/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/sandeep/Downloads/react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sandeep/Downloads/react-hooks/src/forms/EditUserForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\n\nvar EditUserForm = function EditUserForm(props) {\n  var _useState = useState(props.currentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    setUser(props.currentUser);\n  }, [props]); // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, name, value)));\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      props.updateUser(user.id, user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Skill Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"skillName\",\n    value: user.skillName,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Exp Years\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"expYears\",\n    value: user.expYears,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Exp Months\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"expMonths\",\n    value: user.expMonths,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Self Rate\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"selfRate\",\n    value: user.selfRate,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Update user\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return props.setEditing(false);\n    },\n    className: \"button muted-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Cancel\"));\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["/home/sandeep/Downloads/react-hooks/src/forms/EditUserForm.js"],"names":["React","useState","useEffect","EditUserForm","props","currentUser","user","setUser","handleInputChange","event","target","name","value","preventDefault","updateUser","id","skillName","expYears","expMonths","selfRate","setEditing"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBACFH,QAAQ,CAACG,KAAK,CAACC,WAAP,CADN;AAAA;AAAA,MACpBC,IADoB;AAAA,MACdC,OADc;;AAG5BL,EAAAA,SAAS,CACP,YAAM;AACJK,IAAAA,OAAO,CAACH,KAAK,CAACC,WAAP,CAAP;AACD,GAHM,EAIP,CAAED,KAAF,CAJO,CAAT,CAH4B,CAS5B;;AAEA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAAA,wBACTA,KAAK,CAACC,MADG;AAAA,QACzBC,IADyB,iBACzBA,IADyB;AAAA,QACnBC,KADmB,iBACnBA,KADmB;AAGjCL,IAAAA,OAAO,mBAAMD,IAAN,sBAAaK,IAAb,EAAoBC,KAApB,GAAP;AACD,GAJD;;AAMA,SACE;AACE,IAAA,QAAQ,EAAE,kBAAAH,KAAK,EAAI;AACjBA,MAAAA,KAAK,CAACI,cAAN;AAEAT,MAAAA,KAAK,CAACU,UAAN,CAAiBR,IAAI,CAACS,EAAtB,EAA0BT,IAA1B;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAQE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAoC,IAAA,KAAK,EAAEA,IAAI,CAACU,SAAhD;AAA2D,IAAA,QAAQ,EAAER,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,EAUE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAEF,IAAI,CAACW,QAA/C;AAAyD,IAAA,QAAQ,EAAET,iBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,EAYE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAoC,IAAA,KAAK,EAAEF,IAAI,CAACY,SAAhD;AAA2D,IAAA,QAAQ,EAAEV,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,EAcE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAEF,IAAI,CAACa,QAA/C;AAAyD,IAAA,QAAQ,EAAEX,iBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,EAgBE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMJ,KAAK,CAACgB,UAAN,CAAiB,KAAjB,CAAN;AAAA,KAAjB;AAAgD,IAAA,SAAS,EAAC,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF;AAsBD,CAvCD;;AAyCA,eAAejB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst EditUserForm = props => {\n  const [ user, setUser ] = useState(props.currentUser)\n\n  useEffect(\n    () => {\n      setUser(props.currentUser)\n    },\n    [ props ]\n  )\n  // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setUser({ ...user, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateUser(user.id, user)\n      }}\n    >\n      <label>Skill Name</label>\n      <input type=\"text\" name=\"skillName\" value={user.skillName} onChange={handleInputChange} />\n      <label>Exp Years</label>\n      <input type=\"text\" name=\"expYears\" value={user.expYears} onChange={handleInputChange} />\n      <label>Exp Months</label>\n      <input type=\"text\" name=\"expMonths\" value={user.expMonths} onChange={handleInputChange} />\n      <label>Self Rate</label>\n      <input type=\"text\" name=\"selfRate\" value={user.selfRate} onChange={handleInputChange} />\n      <button>Update user</button>\n      <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditUserForm\n"]},"metadata":{},"sourceType":"module"}